July 21 st 2017:
There has been some work done around dealing with adjoint fields. Indeed, these representations are real but the representation matrices used in PyR@TE are always complex even for real representation,
it is important to be able to conjugate the representation matrices. For instance, if one wants to obtained the following contraction for two triplets of SU(2): a[1]b[1]+ a[2]b[2] + a[3]b[3], it is
indispensable to conjugate the second representation matrix as can be checked in the interactive mode:

Invariant SU2 [[2],[2,True]]

The way we implemented it is clear in the above example, and is the addon of the True/False key word at the end of the representation (Note that this already existed for SU(2) since the conj. rep. are degenerate with the regular ones).
For the 8 of SU3 one would then obtained for instance:

Invariants SU3 [[1,1,True],[1,1,False]]

Now, if one wants to implement a real scalar, but conjugate one every two matrix representation, this is not possible using the entry RealScalars of PyR@TE since only one representation is given. However, one
can then use the CplxScalars section and set the imaginary part to zero (Note that -8 for the conjugate irrep):

S*: {RealFields: [Pi1,0], Norm: 1/Sqrt(2), Qnb : {U1: 0, SU2L: 1, SU3c: -8}}


August 25th 2016:
PyR@TE 2.0.0 released.

March 3rd:
Fixed a bug pointed out by Kevin Max when no fermions are specified in the model file

Decemeber 9th:
bug Fixed in the Determin Order function when dealing with vector Yukawa. No
impact on the results.

November 24 th:
change numpy version checking to accomodate 10...

November 11th:

Modified the database to adopt Susyno v3.4. This means that some of the
invariants have changed and one should check using the interactive mode -idb
that they match the desired ones.

August 20th:
Corrected a bug in the naming of the output. No impact on the results.

June 5th:

Bug introduced in version 1.1.1 fixed: with models where there is a singlet contracted with other fields. I introduced a fix for the permutations of indices but missed out one case which was never encountered in the demo model files. In case it was encoutered the program would crash. Therefore, no wrong results coudl have been produced.

April 15 th:

Version 1.2.0_beta finalized: 
	* New key word CGCs allowing to deal with multiple gauge singlets for a
	given term
	* Please read NewsInPyR@TE-1.2.0.html before using
	* Add the non public implementation of the sparse matrices

March 8th : 

Bug fixed introduced in previous version...Thanks to M. Arshad Momen for
pointing this out


February 25th 2015:
Bug Fixed: the singlets position in quartic terms was still influencing the
results ! 

January 18th 2015:
Bug fixed introduced in version 1.0.5 when yukawa matrices are not squared.

NOvember 13th 2014:
Bug fixed in the FermionMasses at two-loop. No impact on the physics.

September 8th 2014:
Bug introduced in pyrate-1.1.3 fixed. All the gauge groups were being added a dummy Group. Thanks to Debtosh Chowdhury for bringing this to my attention.

July 23rd:
Create a dummy SU(n) group when only abelian group factors are present because it is required for the algorithm that perform the derivative of the potential.
e.g. phi^4 theory

june 5th:
Bug fixed in the mixing of multiple quartic terms when some scalars were charged under several groups, pyrate was skipping the calculation.
Also removed the "letter" option in the latex output
Thanks to Daniel Busbridge for bringing this issue to my attention

May 12th : 
Bug  fixed in the latex output when a yukawa with identical two fermions was generated --> Wrong indices
Thanks to K. Karnike

April 24th:
1) Corrected an output visual namely that when calculating combinations because it was impossible to disentengle everything, some "+0+0" appeared in the results

February 25th:

1) Implementation of the possibility to deal with sum of terms
2) Improve the disentangle and if not possible then calculate a possible
combination 
3) Merge the skip and Only options

December 6th :

1) remove the need to declare the real degrees of freedom for the complex scalar fields. 
2) Corrected all the models correspondingly
Note that you can still use the old definition



October 29 : 
Introduction of the Neglecting term list
October 29 :

Fix of the logfile system

October 22 :

Fix when a gauge group is spectator. 
Add a check for the qnbs of the real degrees of freedom versus the cplx fields it comes from

October 11 :

Fix in the product matrix reconstruction 
plus input file when anything that looks like MatM is used for parameters
October 10 : 
description:
bug fixed in the recognition of the real component of the field when there is a + sign
files : 
Particles.py



